#!/bin/bash

### Test for root
if [ "$UID" -ne "0" ]
then
  echo "Must be root to run this script."
  exit 1
fi  
echo ""
echo "=== RadarGun ==="
echo " This script is to be used on environments where worker nodes are provisioned via PXE boot"
echo " and a main provides this PXE image and also acts as a DHCP server.  This script should"
echo " *only* be run on the main, and it will attempt to detect the worker nodes' IP addresses"
echo " and give them friendly names by adding them to /etc/hosts"
echo ""

WORKER_PREFIX=worker
SHOW_WARNING=true


help_and_exit() {
  echo "Usage: "
  echo '  $ detect_worker_ips.sh [-p WORKER_PREFIX] [-y]'
  echo ""
  echo "   -p   Provides a prefix to all worker names entered in /etc/hosts"
  echo "        Defaults to '$WORKER_PREFIX'"
  echo ""
  echo "   -y   Answers 'yes' to all questions asked"
  echo ""
  echo "   -h   Displays this help screen"
  echo ""
  exit 0
}

### read in any command-line params
while ! [ -z $1 ] 
do
  case "$1" in
    "-p")
      WORKER_PREFIX=$2
      ## Do an extra shift here since we have popped off the next param as well
      shift 
      ;;
    "-y")
      SHOW_WARNING=false
      ;;
    *)
      help_and_exit
      ;;
  esac
  shift
done

echo "Worker prefix: $WORKER_PREFIX"

if [ $SHOW_WARNING="true" ] ; then
  echo "Are you sure you wish to continue?  Any key to continue, CTRL-C to quit."
  read any_key
fi

dhcp_leases_file=/var/lib/dhcpd/dhcpd.leases

if ! [ -e $dhcp_leases_file ] ; then
  echo "FATAL: Cannot locate $dhcp_leases_file to detect assigned IPs!"
  echo "       Quitting!"
  exit 1
fi

grep "^lease " $dhcp_leases_file | sed -e "s/^lease //g" -e "s/ {.*$//g" > /tmp/ip_address_guesses

echo "" >> /etc/hosts
echo "#### GENERATED BY RadarGun" >> /etc/hosts
echo "" >> /etc/hosts

./unique_ips.py /tmp/ip_address_guesses $WORKER_PREFIX > /tmp/worker_addresses
cat /tmp/worker_addresses >> /etc/hosts

echo "192.168.0.254 main server1" >> /tmp/worker_addresses
## Install worker hosts file for each worker
for workername in `sed -e "s/^.* //g" /tmp/worker_addresses` ; do
  scp -q -o "StrictHostKeyChecking false" /tmp/worker_addresses root@$workername:/tmp/
  ssh -q -o "StrictHostKeyChecking false" root@$workername "cat /tmp/worker_addresses >> /etc/hosts ; hostname $workername ; rm /tmp/worker_addresses" &
done

rm /tmp/ip_address_guesses
rm /tmp/worker_addresses

echo " ... Done!  Please check /etc/hosts to verify that workers have been properly entered!"
echo ""
echo ""
exit 0

